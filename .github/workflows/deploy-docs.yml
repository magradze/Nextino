# The name of the workflow, which will be displayed in the GitHub Actions tab.
name: 'Deploy Docs to GitHub Pages'

# Controls when the workflow will run.
on:
  # Triggers the workflow on push events but only for the "main" branch.
  # Change this to "master" if that is your default branch.
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# Sets permissions for the GITHUB_TOKEN to allow deployment to GitHub Pages.
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Single deployment job since we're just building and deploying.
  deploy:
    # Specifies the environment, required for GitHub Pages deployment.
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      # Step 2: Sets up Node.js environment for building the site.
      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Docusaurus recommends Node.js 18 or higher
          cache: 'npm'
          # Specify the path to your package-lock.json in the 'website' directory
          cache-dependency-path: 'website/package-lock.json'

      # Step 3: Install dependencies for your Docusaurus site.
      - name: 'Install dependencies'
        # We navigate into the 'website' directory and run 'npm ci'
        # 'npm ci' is faster and safer for CI environments than 'npm install'.
        run: cd website && npm ci

      # Step 4: Build the static site files.
      - name: 'Build Docusaurus site'
        # This command creates the static HTML/CSS/JS files in the 'website/build' directory.
        run: cd website && npm run build

      # Step 5: Configure GitHub Pages.
      - name: 'Setup Pages'
        uses: actions/configure-pages@v4

      # Step 6: Upload the build artifact.
      - name: 'Upload artifact'
        uses: actions/upload-pages-artifact@v3
        with:
          # The artifact is the 'build' directory generated in the previous step.
          path: 'website/build'

      # Step 7: Deploy the artifact to GitHub Pages.
      - name: 'Deploy to GitHub Pages'
        id: deployment
        uses: actions/deploy-pages@v4